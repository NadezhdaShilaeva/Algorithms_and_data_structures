// E.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <vector>
#include <queue>
#include <fstream>

using namespace std;

int main()
{
    ifstream file_in("pathbge1.in");
    ofstream file_out("pathbge1.out");
    int n, m, v1, v2;
    file_in >> n >> m;
    vector<vector<int>> graph(n);
    for (int i = 0; i < m; ++i)
    {
        file_in >> v1 >> v2;
        graph[v1 - 1].push_back(v2 - 1);
        graph[v2 - 1].push_back(v1 - 1);
    }
    vector<int> dist(n, -1);
    dist[0] = 0;
    queue<int> que;
    que.push(0);
    while (!que.empty())
    {
        int v = que.front();
        que.pop();
        for (int i = 0; i < graph[v].size(); ++i)
        {
            if (dist[graph[v][i]] == -1)
            {
                dist[graph[v][i]] = dist[v] + 1;
                que.push(graph[v][i]);
            }
        }
    }
    for (int i = 0; i < n; ++i)
    {
        file_out << dist[i] << " ";
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
